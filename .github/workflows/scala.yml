name: ci-deploy
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: environment
        run: |
          sudo apt-get install --yes --no-install-recommends libxml-xpath-perl
          export ARTIFACT_ID=$(xpath -q -e "/project/artifactId/text()" pom.xml)
          echo "::set-env name=ARTIFACT_ID::${ARTIFACT_ID}"
          export VERSION=$(xpath -q -e "/project/version/text()" pom.xml)
          export VERSION=${VERSION//-SNAPSHOT}-$(git rev-parse --short ${GITHUB_SHA})
          echo "::set-env name=VERSION::${VERSION}"
      - name: mvn version
        run: mvn --batch-mode versions:set -DgenerateBackupPoms=false -DnewVersion=${VERSION}
      - name: mvn deploy
        run: mvn clean install
      - uses: actions/upload-artifact@v1
        with:
          name: ${ARTIFACT_ID}-${VERSION}.jar
          path: ./target
      - name: ls compile
        run: ls
      - name: docker build
        run: |
          docker build \
          --tag docker.pkg.github.com/${{ secrets.REPOSITORY }}/${ARTIFACT_ID}:${VERSION} \
          .
      - name: docker push github
        run: |
          echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY_OWNER} --password-stdin
          docker push docker.pkg.github.com/${{ secrets.REPOSITORY }}/${ARTIFACT_ID}:${VERSION}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
